/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "clients.baml": "client<llm> MercuryCoder {\n  provider openai-generic\n  options {\n    base_url \"https://api.inceptionlabs.ai/v1\"\n    model \"mercury-coder\"\n    default_role \"user\"\n    api_key env.INCEPTION_API_KEY\n  }\n}\n\nretry_policy Constant {\n  max_retries 3\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}\n",
  "code.baml": "class ViewElement {\n  tag \"view\"\n  children Element[]\n  css string?\n}\n\nclass TextElement {\n  tag \"text\"\n  text string\n  css string?\n}\n\ntype Element = TextElement | ViewElement\n\nclass Wireframe {\n  elements Element[]\n}\n\nclass Wireframes{\n  wireframes Wireframe[] @check(more_than_3,\n\t  {{ this|length > 3 }}\n  )\n}\n\nfunction GenerateWireframes(resume: string) -> Wireframes {\n  client MercuryCoder\n  prompt #\"\n    Gere alguns esboços baseados na seguinte descrição\n    {{ resume }}\n\n    Faça os esboços simples, eles serão refinados posteriormente. O objetivo é dar o usuário a capacidade de construir a interface do jeito que ele acha melhor.\n\n    Não inclua nenhuma informação extra, apenas os wireframes em si. De preferência, gere pelo menos 3 variações diferentes, não existe quantidade máxima.\n\n    Siga o seguinte formato\n    {{ ctx.output_format }}\n  \"#\n}\n\n// Test the function with a sample resume. Open the VSCode playground to run this.\ntest teste {\n  functions [GenerateWireframes]\n  args {\n    resume #\"\n      Gere uma dashboard web para um sistema de monitoramento de servidores.\n    \"#\n  }\n}\n",
  "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n  // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n  output_type \"typescript\"\n\n  // Where the generated code will be saved (relative to baml_src/)\n  output_dir \"../\"\n\n  // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n  // The BAML VSCode extension version should also match this version.\n  version \"0.211.2\"\n\n  // Valid values: \"sync\", \"async\"\n  // This controls what `b.FunctionName()` will be (sync or async).\n  default_client_mode async\n}\n",
}
export const getBamlFiles = () => {
  return fileMap
}
